apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "spiderjs.fullname" . }}-config
  labels:
    {{- include "spiderjs.labels" . | nindent 4 }}
data:
  config.yaml: |-
    log:
      level: {{ .Values.config.logLevel }}
      format: {{ .Values.config.logFormat }}
    
    server:
      host: "0.0.0.0"
      port: 8080
    
    ml:
      model_path: {{ .Values.config.ml.modelPath }}
      threshold: {{ .Values.config.ml.threshold }}
    
    scanner:
      timeout: {{ .Values.config.scanner.timeout }}
      max_depth: {{ .Values.config.scanner.maxDepth }}
    
    database:
      mongodb:
        uri: mongodb://{{ .Values.mongodb.auth.username }}:{{ .Values.mongodb.auth.password }}@{{ .Release.Name }}-mongodb:27017/{{ .Values.mongodb.auth.database }}
        database: {{ .Values.mongodb.auth.database }}

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "spiderjs.fullname" . }}-ml-model
  labels:
    {{- include "spiderjs.labels" . | nindent 4 }}
data:
  model.json: |-
    {
      "name": "SpiderJS-ML-1.0",
      "version": "1.0.0",
      "description": "Machine learning model for JavaScript vulnerability detection",
      "features": [
        "has_user_input",
        "uses_eval",
        "uses_innerhtml",
        "uses_document_write",
        "uses_fetch_api",
        "has_jwt",
        "has_cors_headers",
        "has_csp_headers",
        "has_prototype_manipulation",
        "has_event_handlers"
      ],
      "thresholds": {
        "high": 0.8,
        "medium": 0.6,
        "low": 0.4
      },
      "weights": {
        "xss": [0.8, 0.7, 0.9, 0.9, 0.3, 0.1, -0.5, -0.7, 0.2, 0.6],
        "injection": [0.7, 0.8, 0.3, 0.4, 0.6, 0.2, 0.1, -0.3, 0.3, 0.2],
        "csrf": [0.5, 0.2, 0.3, 0.3, 0.7, 0.4, -0.2, -0.3, 0.1, 0.4],
        "prototype_pollution": [0.3, 0.4, 0.2, 0.2, 0.1, 0.1, 0.0, -0.1, 0.9, 0.3],
        "jwt_vulnerability": [0.2, 0.3, 0.1, 0.1, 0.5, 0.9, 0.1, -0.2, 0.1, 0.2]
      },
      "biases": {
        "xss": -0.5,
        "injection": -0.4,
        "csrf": -0.3,
        "prototype_pollution": -0.4,
        "jwt_vulnerability": -0.5
      },
      "unsafe_patterns": [
        "eval\\(",
        "Function\\(",
        "setTimeout\\(['\"][^'\"]+['\"]",
        "setInterval\\(['\"][^'\"]+['\"]",
        "document\\.write",
        "document\\.innerHtml",
        "innerHTML",
        "__proto__",
        "prototype"
      ]
    } 